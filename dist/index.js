"use strict";var g=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var P=Object.prototype.hasOwnProperty;var N=(r,e)=>{for(var t in e)g(r,t,{get:e[t],enumerable:!0})},I=(r,e,t,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of j(e))!P.call(r,a)&&a!==t&&g(r,a,{get:()=>e[a],enumerable:!(o=F(e,a))||o.enumerable});return r};var M=r=>I(g({},"__esModule",{value:!0}),r);var A={};N(A,{Immuter:()=>O});module.exports=M(A);var s=class{constructor(e){this.next=e}handleNext(e,t){return this.next?this.next.handle(e,t):e}};var n=class{static typeOf(e){let t=Reflect.apply(Object.prototype.toString,e,[]);return t.slice(t.indexOf(" ")+1,t.indexOf("]")).toLowerCase()}static isDate(e){return this.typeOf(e)==="date"}static isObject(e){return this.typeOf(e)==="object"}static isArray(e){return Array.isArray(e)}static isMap(e){return this.typeOf(e)==="map"}static isSet(e){return this.typeOf(e)==="set"}static isPrimitive(e){return Object(e)!==e}};var f=class extends s{handle(e,t){return n.isArray(e)?this.createCloneOf(e,t):this.handleNext(e,t)}createCloneOf(e,t){return e.map(t)}};var h=class extends s{handle(e,t){return n.isDate(e)?new Date(e):this.handleNext(e,t)}};var x=class extends Error{constructor(e){super(e),this.name="CloneExceptionError"}};var u=class{static execute(e,t){try{return this.performClone(e,t)}catch(o){if(o instanceof Error)throw new x(o.message)}}static performClone(e,t){let o=this.createCloneOf(e),a=this.propertyDescriptorsOf(e);for(let l of Reflect.ownKeys(a))this.isEligibleToAssign(a,l)&&(o[l]=t(Reflect.get(o,l)));return o}static createCloneOf(e){return Object.create(this.prototypeOf(e),this.propertyDescriptorsOf(e))}static prototypeOf(e){return Object.getPrototypeOf(e)}static propertyDescriptorsOf(e){return Object.getOwnPropertyDescriptors(e)}static isEligibleToAssign(e,t){return e[String(t)]&&Reflect.has(e[String(t)],"value")}};var d=class extends s{handle(e,t){return n.isObject(e)?u.execute(e,t):this.handleNext(e,t)}};var m=class extends s{handle(e,t){return n.isMap(e)?this.createCloneOf(e,t):this.handleNext(e,t)}createCloneOf(e,t){let o=new Map(e);return e.forEach((a,l)=>o.set(l,t(a))),o}};var k=class extends s{handle(e,t){return n.isSet(e)?this.createCloneOf(e,t):this.handleNext(e,t)}createCloneOf(e,t){let o=new Set(e);return e.forEach(a=>o.add(t(a))),o}};var i=class{static execute(e){if(!this.recursivelyHandler){let t=new d,o=new f(t),a=new m(o),l=new k(a),H=new h(l);this.recursivelyHandler=H}return this.recursivelyHandler.handle(e,this.execute.bind(this))}};var c=class{constructor(e){this.next=e}handleNext(e,t){return this.next?this.next.handle(e,t):e}freeze(e){return Object.freeze(e)}};var b=class extends c{handle(e,t){return n.isArray(e)?this.freeze(this.createCloneOf(i.execute(e),t)):this.handleNext(e,t)}createCloneOf(e,t){return e.map(t)}};var C=class extends Error{constructor(){super("Cannot assign to immutable Map"),this.name="CannotAssignToImmutableMapError"}};var w=class extends c{handle(e,t){return n.isMap(e)?this.freezeMap(e):this.handleNext(e,t)}freezeMap(e){return e.set=this.throwError,e.delete=this.throwError,e.clear=this.throwError,this.freeze(e)}throwError(){throw new C}};var S=class extends c{handle(e,t){return n.isObject(e)?this.freeze(u.execute(i.execute(e),t)):this.handleNext(e,t)}};var y=class extends Error{constructor(){super("Cannot assign to immutable Set"),this.name="CannotAssignToImmutableSetError"}};var T=class extends c{handle(e,t){return n.isSet(e)?this.freezeSet(e):this.handleNext(e,t)}freezeSet(e){return e.add=this.throwError,e.delete=this.throwError,e.clear=this.throwError,this.freeze(e)}throwError(){throw new y}};var v=class extends c{handle(e,t){return n.isDate(e)?this.freeze(i.execute(e)):this.handleNext(e,t)}};var E=class{static execute(e){if(!this.recursivelyHandler){let t=new T,o=new w(t),a=new S(o),l=new b(a),H=new v(l);this.recursivelyHandler=H}return this.recursivelyHandler.handle(e,this.execute.bind(this))}};var z=class{static execute(e,t){t(e)}};var B=class extends TypeError{constructor(e){super(`Invalid baseState type: [${e}]`),this.name="InvalidBaseStateError"}};var D={freeze:!0},p=class p{constructor(e){this.config=e}static createImmutable(){return new p(D)}static createMutable(){return new p({freeze:!1})}static get global(){return{not:{freeze:()=>{this.instance=this.createMutable()}},freeze:()=>{this.instance=this.createImmutable()}}}static get not(){return{freeze:this.createMutable()}}static produce(e,t){return this.instance.produce(e,t)}static clone(e){return this.instance.clone(e)}clone(e){this.throwIfNotObject(e);let t=i.execute(e);return this.execute(t)}execute(e){return this.freezeIfNecessary(e)}freezeIfNecessary(e){return this.config.freeze?E.execute(e):e}produce(e,t){this.throwIfNotObject(e);let o=i.execute(e);return z.execute(o,t),this.execute(o)}throwIfNotObject(e){if(n.isPrimitive(e))throw new B(n.typeOf(e))}};p.instance=p.createImmutable();var O=p;0&&(module.exports={Immuter});
